<?php

namespace XLite\Model\Proxy\__CG__\XLite\Model;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Profile extends \XLite\Model\Profile implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getDefaultCardId($strict = false)
    {
        $this->__load();
        return parent::getDefaultCardId($strict);
    }

    public function getSavedCards($strict = false)
    {
        $this->__load();
        return parent::getSavedCards($strict);
    }

    public function isCardIdValid($cardId, $strict = false)
    {
        $this->__load();
        return parent::isCardIdValid($cardId, $strict);
    }

    public function allowRecharge($cardId)
    {
        $this->__load();
        return parent::allowRecharge($cardId);
    }

    public function denyRecharge($cardId)
    {
        $this->__load();
        return parent::denyRecharge($cardId);
    }

    public function setDefaultCardId($defaultCardId)
    {
        $this->__load();
        return parent::setDefaultCardId($defaultCardId);
    }

    public function setPendingZeroAuth($pendingZeroAuth)
    {
        $this->__load();
        return parent::setPendingZeroAuth($pendingZeroAuth);
    }

    public function getPendingZeroAuth()
    {
        $this->__load();
        return parent::getPendingZeroAuth();
    }

    public function setPendingZeroAuthTxnId($pendingZeroAuthTxnId)
    {
        $this->__load();
        return parent::setPendingZeroAuthTxnId($pendingZeroAuthTxnId);
    }

    public function getPendingZeroAuthTxnId()
    {
        $this->__load();
        return parent::getPendingZeroAuthTxnId();
    }

    public function setPendingZeroAuthStatus($pendingZeroAuthStatus)
    {
        $this->__load();
        return parent::setPendingZeroAuthStatus($pendingZeroAuthStatus);
    }

    public function getPendingZeroAuthStatus()
    {
        $this->__load();
        return parent::getPendingZeroAuthStatus();
    }

    public function setPendingZeroAuthInterface($pendingZeroAuthInterface)
    {
        $this->__load();
        return parent::setPendingZeroAuthInterface($pendingZeroAuthInterface);
    }

    public function getPendingZeroAuthInterface()
    {
        $this->__load();
        return parent::getPendingZeroAuthInterface();
    }

    public function isSocialProfile()
    {
        $this->__load();
        return parent::isSocialProfile();
    }

    public function setSocialLoginProvider($socialLoginProvider)
    {
        $this->__load();
        return parent::setSocialLoginProvider($socialLoginProvider);
    }

    public function getSocialLoginProvider()
    {
        $this->__load();
        return parent::getSocialLoginProvider();
    }

    public function setSocialLoginId($socialLoginId)
    {
        $this->__load();
        return parent::setSocialLoginId($socialLoginId);
    }

    public function getSocialLoginId()
    {
        $this->__load();
        return parent::getSocialLoginId();
    }

    public function setMembership(\XLite\Model\Membership $membership = NULL)
    {
        $this->__load();
        return parent::setMembership($membership);
    }

    public function setPendingMembership(\XLite\Model\Membership $pendingMembership = NULL)
    {
        $this->__load();
        return parent::setPendingMembership($pendingMembership);
    }

    public function getMembershipId()
    {
        $this->__load();
        return parent::getMembershipId();
    }

    public function getPendingMembershipId()
    {
        $this->__load();
        return parent::getPendingMembershipId();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function getBillingAddress()
    {
        $this->__load();
        return parent::getBillingAddress();
    }

    public function getShippingAddress()
    {
        $this->__load();
        return parent::getShippingAddress();
    }

    public function getFirstAddress()
    {
        $this->__load();
        return parent::getFirstAddress();
    }

    public function getOrdersCount()
    {
        $this->__load();
        return parent::getOrdersCount();
    }

    public function isEnabled()
    {
        $this->__load();
        return parent::isEnabled();
    }

    public function enable()
    {
        $this->__load();
        return parent::enable();
    }

    public function disable()
    {
        $this->__load();
        return parent::disable();
    }

    public function isAdmin()
    {
        $this->__load();
        return parent::isAdmin();
    }

    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function update($cloneMode = false)
    {
        $this->__load();
        return parent::update($cloneMode);
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }

    public function isSameAddress()
    {
        $this->__load();
        return parent::isSameAddress();
    }

    public function isEqualAddress($strict = false)
    {
        $this->__load();
        return parent::isEqualAddress($strict);
    }

    public function cloneEntity()
    {
        $this->__load();
        return parent::cloneEntity();
    }

    public function setOrder(\XLite\Model\Order $order = NULL)
    {
        $this->__load();
        return parent::setOrder($order);
    }

    public function getPasswordAlgo()
    {
        $this->__load();
        return parent::getPasswordAlgo();
    }

    public function mergeWithProfile(\XLite\Model\Profile $profile, $flag = 3)
    {
        $this->__load();
        return parent::mergeWithProfile($profile, $flag);
    }

    public function isPermissionAllowed($code)
    {
        $this->__load();
        return parent::isPermissionAllowed($code);
    }

    public function getProfileId()
    {
        $this->__load();
        return parent::getProfileId();
    }

    public function setLogin($login)
    {
        $this->__load();
        return parent::setLogin($login);
    }

    public function getLogin()
    {
        $this->__load();
        return parent::getLogin();
    }

    public function setPassword($password)
    {
        $this->__load();
        return parent::setPassword($password);
    }

    public function getPassword()
    {
        $this->__load();
        return parent::getPassword();
    }

    public function setPasswordHint($passwordHint)
    {
        $this->__load();
        return parent::setPasswordHint($passwordHint);
    }

    public function getPasswordHint()
    {
        $this->__load();
        return parent::getPasswordHint();
    }

    public function setPasswordHintAnswer($passwordHintAnswer)
    {
        $this->__load();
        return parent::setPasswordHintAnswer($passwordHintAnswer);
    }

    public function getPasswordHintAnswer()
    {
        $this->__load();
        return parent::getPasswordHintAnswer();
    }

    public function setPasswordResetKey($passwordResetKey)
    {
        $this->__load();
        return parent::setPasswordResetKey($passwordResetKey);
    }

    public function getPasswordResetKey()
    {
        $this->__load();
        return parent::getPasswordResetKey();
    }

    public function setPasswordResetKeyDate($passwordResetKeyDate)
    {
        $this->__load();
        return parent::setPasswordResetKeyDate($passwordResetKeyDate);
    }

    public function getPasswordResetKeyDate()
    {
        $this->__load();
        return parent::getPasswordResetKeyDate();
    }

    public function setAccessLevel($accessLevel)
    {
        $this->__load();
        return parent::setAccessLevel($accessLevel);
    }

    public function getAccessLevel()
    {
        $this->__load();
        return parent::getAccessLevel();
    }

    public function setCmsProfileId($cmsProfileId)
    {
        $this->__load();
        return parent::setCmsProfileId($cmsProfileId);
    }

    public function getCmsProfileId()
    {
        $this->__load();
        return parent::getCmsProfileId();
    }

    public function setCmsName($cmsName)
    {
        $this->__load();
        return parent::setCmsName($cmsName);
    }

    public function getCmsName()
    {
        $this->__load();
        return parent::getCmsName();
    }

    public function setAdded($added)
    {
        $this->__load();
        return parent::setAdded($added);
    }

    public function getAdded()
    {
        $this->__load();
        return parent::getAdded();
    }

    public function setFirstLogin($firstLogin)
    {
        $this->__load();
        return parent::setFirstLogin($firstLogin);
    }

    public function getFirstLogin()
    {
        $this->__load();
        return parent::getFirstLogin();
    }

    public function setLastLogin($lastLogin)
    {
        $this->__load();
        return parent::setLastLogin($lastLogin);
    }

    public function getLastLogin()
    {
        $this->__load();
        return parent::getLastLogin();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setReferer($referer)
    {
        $this->__load();
        return parent::setReferer($referer);
    }

    public function getReferer()
    {
        $this->__load();
        return parent::getReferer();
    }

    public function setLanguage($language)
    {
        $this->__load();
        return parent::setLanguage($language);
    }

    public function getLanguage()
    {
        $this->__load();
        return parent::getLanguage();
    }

    public function setLastShippingId($lastShippingId)
    {
        $this->__load();
        return parent::setLastShippingId($lastShippingId);
    }

    public function getLastShippingId()
    {
        $this->__load();
        return parent::getLastShippingId();
    }

    public function setLastPaymentId($lastPaymentId)
    {
        $this->__load();
        return parent::setLastPaymentId($lastPaymentId);
    }

    public function getLastPaymentId()
    {
        $this->__load();
        return parent::getLastPaymentId();
    }

    public function setAnonymous($anonymous)
    {
        $this->__load();
        return parent::setAnonymous($anonymous);
    }

    public function getAnonymous()
    {
        $this->__load();
        return parent::getAnonymous();
    }

    public function setForceChangePassword($forceChangePassword)
    {
        $this->__load();
        return parent::setForceChangePassword($forceChangePassword);
    }

    public function getForceChangePassword()
    {
        $this->__load();
        return parent::getForceChangePassword();
    }

    public function getOrder()
    {
        $this->__load();
        return parent::getOrder();
    }

    public function addEvent(\XLite\Model\OrderHistoryEvents $event)
    {
        $this->__load();
        return parent::addEvent($event);
    }

    public function getEvent()
    {
        $this->__load();
        return parent::getEvent();
    }

    public function getMembership()
    {
        $this->__load();
        return parent::getMembership();
    }

    public function getPendingMembership()
    {
        $this->__load();
        return parent::getPendingMembership();
    }

    public function addAddresses(\XLite\Model\Address $addresses)
    {
        $this->__load();
        return parent::addAddresses($addresses);
    }

    public function getAddresses()
    {
        $this->__load();
        return parent::getAddresses();
    }

    public function addRoles(\XLite\Model\Role $roles)
    {
        $this->__load();
        return parent::addRoles($roles);
    }

    public function getRoles()
    {
        $this->__load();
        return parent::getRoles();
    }

    public function map(array $data)
    {
        $this->__load();
        return parent::map($data);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __isset($name)
    {
        $this->__load();
        return parent::__isset($name);
    }

    public function __unset($name)
    {
        $this->__load();
        return parent::__unset($name);
    }

    public function getRepository()
    {
        $this->__load();
        return parent::getRepository();
    }

    public function checkCache()
    {
        $this->__load();
        return parent::checkCache();
    }

    public function detach()
    {
        $this->__load();
        return parent::detach();
    }

    public function __call($method, array $args = array (
))
    {
        $this->__load();
        return parent::__call($method, $args);
    }

    public function setterProperty($property, $value)
    {
        $this->__load();
        return parent::setterProperty($property, $value);
    }

    public function getterProperty($property)
    {
        $this->__load();
        return parent::getterProperty($property);
    }

    public function isPersistent()
    {
        $this->__load();
        return parent::isPersistent();
    }

    public function isDetached()
    {
        $this->__load();
        return parent::isDetached();
    }

    public function getUniqueIdentifierName()
    {
        $this->__load();
        return parent::getUniqueIdentifierName();
    }

    public function getUniqueIdentifier()
    {
        $this->__load();
        return parent::getUniqueIdentifier();
    }

    public function processFiles($field, array $data)
    {
        $this->__load();
        return parent::processFiles($field, $data);
    }

    public function prepareEntityBeforeCommit($type)
    {
        $this->__load();
        return parent::prepareEntityBeforeCommit($type);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'default_card_id', 'pending_zero_auth', 'pending_zero_auth_txn_id', 'pending_zero_auth_status', 'pending_zero_auth_interface', 'socialLoginProvider', 'socialLoginId', 'profile_id', 'login', 'password', 'password_hint', 'password_hint_answer', 'passwordResetKey', 'passwordResetKeyDate', 'access_level', 'cms_profile_id', 'cms_name', 'added', 'first_login', 'last_login', 'status', 'referer', 'language', 'last_shipping_id', 'last_payment_id', 'anonymous', 'forceChangePassword', 'order', 'event', 'membership', 'pending_membership', 'addresses', 'roles');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}