<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\CDev\Coupons\Model;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Coupon extends \XLite\Module\CDev\Coupons\Model\Coupon implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function isAbsolute()
    {
        $this->__load();
        return parent::isAbsolute();
    }

    public function isActive(\XLite\Model\Order $order = NULL)
    {
        $this->__load();
        return parent::isActive($order);
    }

    public function getErrorCodes(\XLite\Model\Order $order = NULL)
    {
        $this->__load();
        return parent::getErrorCodes($order);
    }

    public function isExpired()
    {
        $this->__load();
        return parent::isExpired();
    }

    public function getAmount(\XLite\Model\Order $order)
    {
        $this->__load();
        return parent::getAmount($order);
    }

    public function checkMembershipId(\XLite\Model\Membership $item, $membershipId)
    {
        $this->__load();
        return parent::checkMembershipId($item, $membershipId);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setEnabled($enabled)
    {
        $this->__load();
        return parent::setEnabled($enabled);
    }

    public function getEnabled()
    {
        $this->__load();
        return parent::getEnabled();
    }

    public function setValue($value)
    {
        $this->__load();
        return parent::setValue($value);
    }

    public function getValue()
    {
        $this->__load();
        return parent::getValue();
    }

    public function setType($type)
    {
        $this->__load();
        return parent::setType($type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setComment($comment)
    {
        $this->__load();
        return parent::setComment($comment);
    }

    public function getComment()
    {
        $this->__load();
        return parent::getComment();
    }

    public function setUses($uses)
    {
        $this->__load();
        return parent::setUses($uses);
    }

    public function getUses()
    {
        $this->__load();
        return parent::getUses();
    }

    public function setDateRangeBegin($dateRangeBegin)
    {
        $this->__load();
        return parent::setDateRangeBegin($dateRangeBegin);
    }

    public function getDateRangeBegin()
    {
        $this->__load();
        return parent::getDateRangeBegin();
    }

    public function setDateRangeEnd($dateRangeEnd)
    {
        $this->__load();
        return parent::setDateRangeEnd($dateRangeEnd);
    }

    public function getDateRangeEnd()
    {
        $this->__load();
        return parent::getDateRangeEnd();
    }

    public function setTotalRangeBegin($totalRangeBegin)
    {
        $this->__load();
        return parent::setTotalRangeBegin($totalRangeBegin);
    }

    public function getTotalRangeBegin()
    {
        $this->__load();
        return parent::getTotalRangeBegin();
    }

    public function setTotalRangeEnd($totalRangeEnd)
    {
        $this->__load();
        return parent::setTotalRangeEnd($totalRangeEnd);
    }

    public function getTotalRangeEnd()
    {
        $this->__load();
        return parent::getTotalRangeEnd();
    }

    public function setUsesLimit($usesLimit)
    {
        $this->__load();
        return parent::setUsesLimit($usesLimit);
    }

    public function getUsesLimit()
    {
        $this->__load();
        return parent::getUsesLimit();
    }

    public function addProductClasses(\XLite\Model\ProductClass $productClasses)
    {
        $this->__load();
        return parent::addProductClasses($productClasses);
    }

    public function getProductClasses()
    {
        $this->__load();
        return parent::getProductClasses();
    }

    public function addMemberships(\XLite\Model\Membership $memberships)
    {
        $this->__load();
        return parent::addMemberships($memberships);
    }

    public function getMemberships()
    {
        $this->__load();
        return parent::getMemberships();
    }

    public function addUsedCoupons(\XLite\Module\CDev\Coupons\Model\UsedCoupon $usedCoupons)
    {
        $this->__load();
        return parent::addUsedCoupons($usedCoupons);
    }

    public function getUsedCoupons()
    {
        $this->__load();
        return parent::getUsedCoupons();
    }

    public function map(array $data)
    {
        $this->__load();
        return parent::map($data);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __isset($name)
    {
        $this->__load();
        return parent::__isset($name);
    }

    public function __unset($name)
    {
        $this->__load();
        return parent::__unset($name);
    }

    public function getRepository()
    {
        $this->__load();
        return parent::getRepository();
    }

    public function checkCache()
    {
        $this->__load();
        return parent::checkCache();
    }

    public function detach()
    {
        $this->__load();
        return parent::detach();
    }

    public function __call($method, array $args = array (
))
    {
        $this->__load();
        return parent::__call($method, $args);
    }

    public function setterProperty($property, $value)
    {
        $this->__load();
        return parent::setterProperty($property, $value);
    }

    public function getterProperty($property)
    {
        $this->__load();
        return parent::getterProperty($property);
    }

    public function isPersistent()
    {
        $this->__load();
        return parent::isPersistent();
    }

    public function isDetached()
    {
        $this->__load();
        return parent::isDetached();
    }

    public function getUniqueIdentifierName()
    {
        $this->__load();
        return parent::getUniqueIdentifierName();
    }

    public function getUniqueIdentifier()
    {
        $this->__load();
        return parent::getUniqueIdentifier();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }

    public function processFiles($field, array $data)
    {
        $this->__load();
        return parent::processFiles($field, $data);
    }

    public function cloneEntity()
    {
        $this->__load();
        return parent::cloneEntity();
    }

    public function prepareEntityBeforeCommit($type)
    {
        $this->__load();
        return parent::prepareEntityBeforeCommit($type);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'code', 'enabled', 'value', 'type', 'comment', 'uses', 'dateRangeBegin', 'dateRangeEnd', 'totalRangeBegin', 'totalRangeEnd', 'usesLimit', 'productClasses', 'memberships', 'usedCoupons');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}