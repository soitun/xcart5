<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\XC\CanadaPost\Model\Order;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Parcel extends \XLite\Module\XC\CanadaPost\Model\Order\Parcel implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setOldStatus($value)
    {
        $this->__load();
        return parent::setOldStatus($value);
    }

    public function setOrder(\XLite\Model\Order $order = NULL)
    {
        $this->__load();
        return parent::setOrder($order);
    }

    public function addItem(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Item $newItem)
    {
        $this->__load();
        return parent::addItem($newItem);
    }

    public function setShipment(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment $shipment = NULL)
    {
        $this->__load();
        return parent::setShipment($shipment);
    }

    public function cloneEntity($cloneItems = true)
    {
        $this->__load();
        return parent::cloneEntity($cloneItems);
    }

    public function getAllowedOptionClasses()
    {
        $this->__load();
        return parent::getAllowedOptionClasses();
    }

    public function getDeliveryService()
    {
        $this->__load();
        return parent::getDeliveryService();
    }

    public function setStatus($value)
    {
        $this->__load();
        return parent::setStatus($value);
    }

    public function canBeCreated()
    {
        $this->__load();
        return parent::canBeCreated();
    }

    public function canBeProposed()
    {
        $this->__load();
        return parent::canBeProposed();
    }

    public function canBeTransmited()
    {
        $this->__load();
        return parent::canBeTransmited();
    }

    public function hasShipment()
    {
        $this->__load();
        return parent::hasShipment();
    }

    public function hasItems()
    {
        $this->__load();
        return parent::hasItems();
    }

    public function getWeight()
    {
        $this->__load();
        return parent::getWeight();
    }

    public function getWeightInKg($adjustFloatValue = false)
    {
        $this->__load();
        return parent::getWeightInKg($adjustFloatValue);
    }

    public function getBoxWeightInKg($adjustFloatValue = false)
    {
        $this->__load();
        return parent::getBoxWeightInKg($adjustFloatValue);
    }

    public function isOverWeight()
    {
        $this->__load();
        return parent::isOverWeight();
    }

    public function isEditable()
    {
        $this->__load();
        return parent::isEditable();
    }

    public function isDeliveryToPostOffice()
    {
        $this->__load();
        return parent::isDeliveryToPostOffice();
    }

    public function areAPICallsAllowed()
    {
        $this->__load();
        return parent::areAPICallsAllowed();
    }

    public function getApiCallErrors()
    {
        $this->__load();
        return parent::getApiCallErrors();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setNumber($number)
    {
        $this->__load();
        return parent::setNumber($number);
    }

    public function getNumber()
    {
        $this->__load();
        return parent::getNumber();
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setQuoteType($quoteType)
    {
        $this->__load();
        return parent::setQuoteType($quoteType);
    }

    public function getQuoteType()
    {
        $this->__load();
        return parent::getQuoteType();
    }

    public function setBoxWeight($boxWeight)
    {
        $this->__load();
        return parent::setBoxWeight($boxWeight);
    }

    public function getBoxWeight()
    {
        $this->__load();
        return parent::getBoxWeight();
    }

    public function setBoxWidth($boxWidth)
    {
        $this->__load();
        return parent::setBoxWidth($boxWidth);
    }

    public function getBoxWidth()
    {
        $this->__load();
        return parent::getBoxWidth();
    }

    public function setBoxLength($boxLength)
    {
        $this->__load();
        return parent::setBoxLength($boxLength);
    }

    public function getBoxLength()
    {
        $this->__load();
        return parent::getBoxLength();
    }

    public function setBoxHeight($boxHeight)
    {
        $this->__load();
        return parent::setBoxHeight($boxHeight);
    }

    public function getBoxHeight()
    {
        $this->__load();
        return parent::getBoxHeight();
    }

    public function setIsDocument($isDocument)
    {
        $this->__load();
        return parent::setIsDocument($isDocument);
    }

    public function getIsDocument()
    {
        $this->__load();
        return parent::getIsDocument();
    }

    public function setIsUnpackaged($isUnpackaged)
    {
        $this->__load();
        return parent::setIsUnpackaged($isUnpackaged);
    }

    public function getIsUnpackaged()
    {
        $this->__load();
        return parent::getIsUnpackaged();
    }

    public function setIsMailingTube($isMailingTube)
    {
        $this->__load();
        return parent::setIsMailingTube($isMailingTube);
    }

    public function getIsMailingTube()
    {
        $this->__load();
        return parent::getIsMailingTube();
    }

    public function setIsOversized($isOversized)
    {
        $this->__load();
        return parent::setIsOversized($isOversized);
    }

    public function getIsOversized()
    {
        $this->__load();
        return parent::getIsOversized();
    }

    public function setNotifyOnShipment($notifyOnShipment)
    {
        $this->__load();
        return parent::setNotifyOnShipment($notifyOnShipment);
    }

    public function getNotifyOnShipment()
    {
        $this->__load();
        return parent::getNotifyOnShipment();
    }

    public function setNotifyOnException($notifyOnException)
    {
        $this->__load();
        return parent::setNotifyOnException($notifyOnException);
    }

    public function getNotifyOnException()
    {
        $this->__load();
        return parent::getNotifyOnException();
    }

    public function setNotifyOnDelivery($notifyOnDelivery)
    {
        $this->__load();
        return parent::setNotifyOnDelivery($notifyOnDelivery);
    }

    public function getNotifyOnDelivery()
    {
        $this->__load();
        return parent::getNotifyOnDelivery();
    }

    public function setOptSignature($optSignature)
    {
        $this->__load();
        return parent::setOptSignature($optSignature);
    }

    public function getOptSignature()
    {
        $this->__load();
        return parent::getOptSignature();
    }

    public function setOptCoverage($optCoverage)
    {
        $this->__load();
        return parent::setOptCoverage($optCoverage);
    }

    public function getOptCoverage()
    {
        $this->__load();
        return parent::getOptCoverage();
    }

    public function setOptAgeProof($optAgeProof)
    {
        $this->__load();
        return parent::setOptAgeProof($optAgeProof);
    }

    public function getOptAgeProof()
    {
        $this->__load();
        return parent::getOptAgeProof();
    }

    public function setOptWayToDeliver($optWayToDeliver)
    {
        $this->__load();
        return parent::setOptWayToDeliver($optWayToDeliver);
    }

    public function getOptWayToDeliver()
    {
        $this->__load();
        return parent::getOptWayToDeliver();
    }

    public function setOptNonDelivery($optNonDelivery)
    {
        $this->__load();
        return parent::setOptNonDelivery($optNonDelivery);
    }

    public function getOptNonDelivery()
    {
        $this->__load();
        return parent::getOptNonDelivery();
    }

    public function getOrder()
    {
        $this->__load();
        return parent::getOrder();
    }

    public function addItems(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Item $items)
    {
        $this->__load();
        return parent::addItems($items);
    }

    public function getItems()
    {
        $this->__load();
        return parent::getItems();
    }

    public function getShipment()
    {
        $this->__load();
        return parent::getShipment();
    }

    public function map(array $data)
    {
        $this->__load();
        return parent::map($data);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __isset($name)
    {
        $this->__load();
        return parent::__isset($name);
    }

    public function __unset($name)
    {
        $this->__load();
        return parent::__unset($name);
    }

    public function getRepository()
    {
        $this->__load();
        return parent::getRepository();
    }

    public function checkCache()
    {
        $this->__load();
        return parent::checkCache();
    }

    public function detach()
    {
        $this->__load();
        return parent::detach();
    }

    public function __call($method, array $args = array (
))
    {
        $this->__load();
        return parent::__call($method, $args);
    }

    public function setterProperty($property, $value)
    {
        $this->__load();
        return parent::setterProperty($property, $value);
    }

    public function getterProperty($property)
    {
        $this->__load();
        return parent::getterProperty($property);
    }

    public function isPersistent()
    {
        $this->__load();
        return parent::isPersistent();
    }

    public function isDetached()
    {
        $this->__load();
        return parent::isDetached();
    }

    public function getUniqueIdentifierName()
    {
        $this->__load();
        return parent::getUniqueIdentifierName();
    }

    public function getUniqueIdentifier()
    {
        $this->__load();
        return parent::getUniqueIdentifier();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }

    public function processFiles($field, array $data)
    {
        $this->__load();
        return parent::processFiles($field, $data);
    }

    public function prepareEntityBeforeCommit($type)
    {
        $this->__load();
        return parent::prepareEntityBeforeCommit($type);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'number', 'status', 'quoteType', 'boxWeight', 'boxWidth', 'boxLength', 'boxHeight', 'isDocument', 'isUnpackaged', 'isMailingTube', 'isOversized', 'notifyOnShipment', 'notifyOnException', 'notifyOnDelivery', 'optSignature', 'optCoverage', 'optAgeProof', 'optWayToDeliver', 'optNonDelivery', 'order', 'items', 'shipment');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}