<?php

namespace XLite\Model\Proxy\__CG__\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Tracking extends \XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function addDeliveryOption(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\DeliveryOption $newDeliveryOption)
    {
        $this->__load();
        return parent::addDeliveryOption($newDeliveryOption);
    }

    public function addSignificantEvent(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\SignificantEvent $newSignificantEvent)
    {
        $this->__load();
        return parent::addSignificantEvent($newSignificantEvent);
    }

    public function setShipment(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment $shipment = NULL)
    {
        $this->__load();
        return parent::setShipment($shipment);
    }

    public function addFile(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\File $newFile)
    {
        $this->__load();
        return parent::addFile($newFile);
    }

    public function downloadFiles($flush = true)
    {
        $this->__load();
        return parent::downloadFiles($flush);
    }

    public function hasFiles()
    {
        $this->__load();
        return parent::hasFiles();
    }

    public function getRealTrackingPin()
    {
        $this->__load();
        return parent::getRealTrackingPin();
    }

    public function updateExpiry()
    {
        $this->__load();
        return parent::updateExpiry();
    }

    public function isExpired()
    {
        $this->__load();
        return parent::isExpired();
    }

    public function getSignatureImage()
    {
        $this->__load();
        return parent::getSignatureImage();
    }

    public function getDeliveryConfirmationCertificate()
    {
        $this->__load();
        return parent::getDeliveryConfirmationCertificate();
    }

    public function getFileByDocType($docType)
    {
        $this->__load();
        return parent::getFileByDocType($docType);
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setExpiry($expiry)
    {
        $this->__load();
        return parent::setExpiry($expiry);
    }

    public function getExpiry()
    {
        $this->__load();
        return parent::getExpiry();
    }

    public function setPin($pin)
    {
        $this->__load();
        return parent::setPin($pin);
    }

    public function getPin()
    {
        $this->__load();
        return parent::getPin();
    }

    public function setActiveExists($activeExists)
    {
        $this->__load();
        return parent::setActiveExists($activeExists);
    }

    public function getActiveExists()
    {
        $this->__load();
        return parent::getActiveExists();
    }

    public function setArchiveExists($archiveExists)
    {
        $this->__load();
        return parent::setArchiveExists($archiveExists);
    }

    public function getArchiveExists()
    {
        $this->__load();
        return parent::getArchiveExists();
    }

    public function setDestinationPostalId($destinationPostalId)
    {
        $this->__load();
        return parent::setDestinationPostalId($destinationPostalId);
    }

    public function getDestinationPostalId()
    {
        $this->__load();
        return parent::getDestinationPostalId();
    }

    public function setExpectedDeliveryDate($expectedDeliveryDate)
    {
        $this->__load();
        return parent::setExpectedDeliveryDate($expectedDeliveryDate);
    }

    public function getExpectedDeliveryDate()
    {
        $this->__load();
        return parent::getExpectedDeliveryDate();
    }

    public function setChangedExpectedDate($changedExpectedDate)
    {
        $this->__load();
        return parent::setChangedExpectedDate($changedExpectedDate);
    }

    public function getChangedExpectedDate()
    {
        $this->__load();
        return parent::getChangedExpectedDate();
    }

    public function setChangedExpectedDeliveryReason($changedExpectedDeliveryReason)
    {
        $this->__load();
        return parent::setChangedExpectedDeliveryReason($changedExpectedDeliveryReason);
    }

    public function getChangedExpectedDeliveryReason()
    {
        $this->__load();
        return parent::getChangedExpectedDeliveryReason();
    }

    public function setMailedByCustomerNumber($mailedByCustomerNumber)
    {
        $this->__load();
        return parent::setMailedByCustomerNumber($mailedByCustomerNumber);
    }

    public function getMailedByCustomerNumber()
    {
        $this->__load();
        return parent::getMailedByCustomerNumber();
    }

    public function setMailedOnBehalfOfCustomerNumber($mailedOnBehalfOfCustomerNumber)
    {
        $this->__load();
        return parent::setMailedOnBehalfOfCustomerNumber($mailedOnBehalfOfCustomerNumber);
    }

    public function getMailedOnBehalfOfCustomerNumber()
    {
        $this->__load();
        return parent::getMailedOnBehalfOfCustomerNumber();
    }

    public function setOriginalPin($originalPin)
    {
        $this->__load();
        return parent::setOriginalPin($originalPin);
    }

    public function getOriginalPin()
    {
        $this->__load();
        return parent::getOriginalPin();
    }

    public function setServiceName($serviceName)
    {
        $this->__load();
        return parent::setServiceName($serviceName);
    }

    public function getServiceName()
    {
        $this->__load();
        return parent::getServiceName();
    }

    public function setServiceName2($serviceName2)
    {
        $this->__load();
        return parent::setServiceName2($serviceName2);
    }

    public function getServiceName2()
    {
        $this->__load();
        return parent::getServiceName2();
    }

    public function setCustomerRef1($customerRef1)
    {
        $this->__load();
        return parent::setCustomerRef1($customerRef1);
    }

    public function getCustomerRef1()
    {
        $this->__load();
        return parent::getCustomerRef1();
    }

    public function setCustomerRef2($customerRef2)
    {
        $this->__load();
        return parent::setCustomerRef2($customerRef2);
    }

    public function getCustomerRef2()
    {
        $this->__load();
        return parent::getCustomerRef2();
    }

    public function setReturnPin($returnPin)
    {
        $this->__load();
        return parent::setReturnPin($returnPin);
    }

    public function getReturnPin()
    {
        $this->__load();
        return parent::getReturnPin();
    }

    public function setSignatureImageExists($signatureImageExists)
    {
        $this->__load();
        return parent::setSignatureImageExists($signatureImageExists);
    }

    public function getSignatureImageExists()
    {
        $this->__load();
        return parent::getSignatureImageExists();
    }

    public function setSuppressSignature($suppressSignature)
    {
        $this->__load();
        return parent::setSuppressSignature($suppressSignature);
    }

    public function getSuppressSignature()
    {
        $this->__load();
        return parent::getSuppressSignature();
    }

    public function getShipment()
    {
        $this->__load();
        return parent::getShipment();
    }

    public function addDeliveryOptions(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\DeliveryOption $deliveryOptions)
    {
        $this->__load();
        return parent::addDeliveryOptions($deliveryOptions);
    }

    public function getDeliveryOptions()
    {
        $this->__load();
        return parent::getDeliveryOptions();
    }

    public function addSignificantEvents(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\SignificantEvent $significantEvents)
    {
        $this->__load();
        return parent::addSignificantEvents($significantEvents);
    }

    public function getSignificantEvents()
    {
        $this->__load();
        return parent::getSignificantEvents();
    }

    public function addFiles(\XLite\Module\XC\CanadaPost\Model\Order\Parcel\Shipment\Tracking\File $files)
    {
        $this->__load();
        return parent::addFiles($files);
    }

    public function getFiles()
    {
        $this->__load();
        return parent::getFiles();
    }

    public function map(array $data)
    {
        $this->__load();
        return parent::map($data);
    }

    public function __get($name)
    {
        $this->__load();
        return parent::__get($name);
    }

    public function __set($name, $value)
    {
        $this->__load();
        return parent::__set($name, $value);
    }

    public function __isset($name)
    {
        $this->__load();
        return parent::__isset($name);
    }

    public function __unset($name)
    {
        $this->__load();
        return parent::__unset($name);
    }

    public function getRepository()
    {
        $this->__load();
        return parent::getRepository();
    }

    public function checkCache()
    {
        $this->__load();
        return parent::checkCache();
    }

    public function detach()
    {
        $this->__load();
        return parent::detach();
    }

    public function __call($method, array $args = array (
))
    {
        $this->__load();
        return parent::__call($method, $args);
    }

    public function setterProperty($property, $value)
    {
        $this->__load();
        return parent::setterProperty($property, $value);
    }

    public function getterProperty($property)
    {
        $this->__load();
        return parent::getterProperty($property);
    }

    public function isPersistent()
    {
        $this->__load();
        return parent::isPersistent();
    }

    public function isDetached()
    {
        $this->__load();
        return parent::isDetached();
    }

    public function getUniqueIdentifierName()
    {
        $this->__load();
        return parent::getUniqueIdentifierName();
    }

    public function getUniqueIdentifier()
    {
        $this->__load();
        return parent::getUniqueIdentifier();
    }

    public function update()
    {
        $this->__load();
        return parent::update();
    }

    public function create()
    {
        $this->__load();
        return parent::create();
    }

    public function delete()
    {
        $this->__load();
        return parent::delete();
    }

    public function processFiles($field, array $data)
    {
        $this->__load();
        return parent::processFiles($field, $data);
    }

    public function cloneEntity()
    {
        $this->__load();
        return parent::cloneEntity();
    }

    public function prepareEntityBeforeCommit($type)
    {
        $this->__load();
        return parent::prepareEntityBeforeCommit($type);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'expiry', 'pin', 'activeExists', 'archiveExists', 'destinationPostalId', 'expectedDeliveryDate', 'changedExpectedDate', 'changedExpectedDeliveryReason', 'mailedByCustomerNumber', 'mailedOnBehalfOfCustomerNumber', 'originalPin', 'serviceName', 'serviceName_2', 'customerRef_1', 'customerRef_2', 'returnPin', 'signatureImageExists', 'suppressSignature', 'shipment', 'deliveryOptions', 'significantEvents', 'files');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}